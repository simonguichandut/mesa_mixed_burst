#!/bin/bash
# Full control sequence for mixed burst simulation. Starting from 12km NS 
# with Fe56 atmosphere

# First determine which inlist to start with (default is inlist1_relax_R)
start=1
while getopts s: flag
do 
    case "${flag}" in 
        s) start=${OPTARG};;
    esac
done

save_logs () {
   mkdir LOGS/$1
   mv LOGS/{*.dat*,*.index} LOGS/$1
}

save_photos () {
    mkdir photos/$1
    mv photos/*000 photos/$1
    # mv photos/{x*,*000} photos/$1
    # mv photos/{x*,*000} photos/$1/ 2>/dev/null
}

clean_outputs () {
    rm -f LOGS/{*.dat*,*.index}
    rm -f photos/{x*,*0}
    rm -f png/*.png
}

filetype_exists () {
    count=`ls -1 $1 2>/dev/null | wc -l` 
    if [ $count != 0 ] ; then
        true
    else
        false
    fi
}

blank_lines () { yes '' | sed 3q; }

run_one () {
    echo "********************** RUNNING "$1

    # time echo "coucou"$1 > terminal_outputs/foo.txt
    time ./rn > terminal_outputs/$1.txt

    if filetype_exists LOGS/*.data ; then
        save_logs $1
    fi

    if filetype_exists png/*.png ; then 
        images_to_movie "png/*.png" movies/pgstar_$1.mp4
    fi

    if filetype_exists photos/x* || filetype_exists photos/*000 ; then 
        save_photos $1
    fi 

    clean_outputs
    blank_lines
}

cp base_inlist inlist
names=(1_relax_R 2_accrete_Fe 3_relax_Lcenter 4_accrete 5_flash 6_relax_tau 7_wind 8_fallback)

echo "*********** START ***********"

n=1
for name in ${names[@]}; do
    if $n=8 ; then
        python3 find_k_to_remove.py -m stepsize_drop
    fi
    if [ "$start" -le $n ] ; then
        run_one $name
    fi
    ./next_inlist
    n=$(($n+1))
done
rm inlist
echo "********** FINISHED *********"
